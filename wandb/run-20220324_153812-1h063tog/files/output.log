
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Using cuda device
Wrapping the env in a VecTransposeImage.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
Found 4 GPUs for rendering. Using device 0.
ERROR: Offscreen framebuffer is not complete, error 0x8cdd
Press Enter to exit ...Found 4 GPUs for rendering. Using device 0.
ERROR: Offscreen framebuffer is not complete, error 0x8cdd
Press Enter to exit ...ERROR: Offscreen framebuffer is not complete, error 0x8cdd
Press Enter to exit ...
Traceback (most recent call last):
  File "test_train_model_idun_multi.py", line 98, in <module>
    model = PPO('MultiInputPolicy', vec_gym_env, n_steps = 400,verbose=1, batch_size=50, tensorboard_log=f"runs/{run.id}")
  File "/home/ludvik/anaconda3/envs/RS_SB3_test/lib/python3.8/site-packages/stable_baselines3/ppo/ppo.py", line 152, in __init__
    self._setup_model()
  File "/home/ludvik/anaconda3/envs/RS_SB3_test/lib/python3.8/site-packages/stable_baselines3/ppo/ppo.py", line 155, in _setup_model
    super(PPO, self)._setup_model()
  File "/home/ludvik/anaconda3/envs/RS_SB3_test/lib/python3.8/site-packages/stable_baselines3/common/on_policy_algorithm.py", line 127, in _setup_model
    self.policy = self.policy.to(self.device)
  File "/home/ludvik/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 907, in to
    return self._apply(convert)
  File "/home/ludvik/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 578, in _apply
    module._apply(fn)
  File "/home/ludvik/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 578, in _apply
    module._apply(fn)
  File "/home/ludvik/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 578, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/home/ludvik/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 601, in _apply
    param_applied = fn(param)
  File "/home/ludvik/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 905, in convert
    return t.to(device, dtype if t.is_floating_point() or t.is_complex() else None, non_blocking)
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.